/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package form_master;

import com.mysql.jdbc.Statement;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 */
public class Form_4_Buku extends javax.swing.JDialog {
    private final DefaultTableModel tabel;
    Boolean fungsi_simpan=false, fungsi_ubah=false;
    public Statement stt;
    public Connection con;
    private TableColumn column;
    String temp_nib="", tf_temp_id_kategori="";

    /**
     * Creates new form Form_1_Kategori
     */
    public Form_4_Buku(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        String[] judul={"Tanggal Masuk","No Induk","Judul Buku","Pengarang","Penerbit","Jenis Buku"
                       ,"Jumlah","Tersedia","Keluar","Tahun Terbit","No Klasifikasi","Lokasi Buku"};
        tabel = new DefaultTableModel(judul,0);
        jTable1.setModel(tabel);
        tampil();
        aturKolom();
        aturFokus();
        hitungData();
        tampil_kategori();
        ImageIcon ico = new ImageIcon("src/gambar/icon_item.png");
        setIconImage(ico.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tf_no_induk_buku = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cari = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pencarian = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jumlah_data = new javax.swing.JLabel();
        batal = new javax.swing.JButton();
        tf_kategori = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tf_judul_buku = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tf_pengarang = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tf_penerbit = new javax.swing.JTextField();
        tf_jumlah_buku = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tf_tersedia = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tf_tahun_terbit = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tf_keluar = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        tf_no_klasifikasi = new javax.swing.JTextField();
        tf_lokasi_buku = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        tf_tanggal_masuk = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        keluar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Master Buku");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("No Induk Buku");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 142, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Pengarang");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 104, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText(":");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 104, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText(":");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 142, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText(":");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 104, -1, -1));

        tf_no_induk_buku.setEditable(false);
        tf_no_induk_buku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_no_induk_buku.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_no_induk_buku.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_no_induk_buku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_no_induk_bukuKeyTyped(evt);
            }
        });
        getContentPane().add(tf_no_induk_buku, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 134, 230, 30));

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(17);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 327, 1021, 192));

        cari.setText("Cari");
        cari.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cari.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        getContentPane().add(cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(708, 284, 87, 37));

        tambah.setText("Tambah");
        tambah.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tambah.setBorderPainted(false);
        tambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tambah.setIconTextGap(2);
        tambah.setMargin(new java.awt.Insets(2, 0, 2, 0));
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 286, 87, 37));

        simpan.setText("Simpan");
        simpan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpan.setEnabled(false);
        simpan.setIconTextGap(1);
        simpan.setMargin(new java.awt.Insets(2, 0, 2, 0));
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 286, 87, 37));

        ubah.setText("Ubah");
        ubah.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ubah.setEnabled(false);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 286, 87, 37));

        hapus.setText("Hapus");
        hapus.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapus.setEnabled(false);
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 286, 87, 37));

        refresh.setText("Refresh");
        refresh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh.setMargin(new java.awt.Insets(2, 0, 2, 0));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(852, 523, 87, 37));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Jumlah Data");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 533, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MASTER BUKU");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 35, -1, -1));

        pencarian.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pencarian.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        pencarian.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pencarian.setMargin(new java.awt.Insets(0, 3, 0, 3));
        pencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pencarianActionPerformed(evt);
            }
        });
        getContentPane().add(pencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(798, 284, 232, 37));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tanggal Masuk");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 104, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("APLIKASI PERPUSTAKAAN");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 14));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 533, -1, -1));

        jumlah_data.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jumlah_data.setForeground(new java.awt.Color(255, 255, 255));
        jumlah_data.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jumlah_data.setText("0000");
        getContentPane().add(jumlah_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 533, 38, -1));

        batal.setText("Batal");
        batal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        batal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        batal.setMargin(new java.awt.Insets(2, 0, 2, 0));
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });
        getContentPane().add(batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 286, 87, 37));

        tf_kategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        tf_kategori.setEnabled(false);
        tf_kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_kategoriActionPerformed(evt);
            }
        });
        getContentPane().add(tf_kategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 170, 222, 30));

        tf_judul_buku.setEditable(false);
        tf_judul_buku.setColumns(20);
        tf_judul_buku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_judul_buku.setRows(5);
        tf_judul_buku.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_judul_buku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_judul_bukuKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tf_judul_buku);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 170, 230, 98));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Judul Buku");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 177, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText(":");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 177, -1, -1));

        tf_pengarang.setEditable(false);
        tf_pengarang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_pengarang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_pengarang.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_pengarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_pengarangKeyTyped(evt);
            }
        });
        getContentPane().add(tf_pengarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 98, 222, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Penerbit");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 142, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Jumlah Buku");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 212, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText(":");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 212, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText(":");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 142, -1, -1));

        tf_penerbit.setEditable(false);
        tf_penerbit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_penerbit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_penerbit.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_penerbit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_penerbitKeyTyped(evt);
            }
        });
        getContentPane().add(tf_penerbit, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 134, 222, 30));

        tf_jumlah_buku.setEditable(false);
        tf_jumlah_buku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_jumlah_buku.setText("0");
        tf_jumlah_buku.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_jumlah_buku.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_jumlah_buku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_jumlah_bukuKeyTyped(evt);
            }
        });
        getContentPane().add(tf_jumlah_buku, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 206, 134, 30));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Tersedia");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 247, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Tahun Terbit");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 142, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText(":");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 247, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText(":");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 142, -1, -1));

        tf_tersedia.setEditable(false);
        tf_tersedia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_tersedia.setText("0");
        tf_tersedia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_tersedia.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_tersedia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_tersediaKeyTyped(evt);
            }
        });
        getContentPane().add(tf_tersedia, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 242, 134, 30));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Kategori");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 177, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText(":");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 177, -1, -1));

        tf_tahun_terbit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        tf_tahun_terbit.setEnabled(false);
        getContentPane().add(tf_tahun_terbit, new org.netbeans.lib.awtextra.AbsoluteConstraints(876, 134, 134, 30));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Keluar");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 104, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText(":");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 104, -1, -1));

        tf_keluar.setEditable(false);
        tf_keluar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_keluar.setText("0");
        tf_keluar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_keluar.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_keluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_keluarKeyTyped(evt);
            }
        });
        getContentPane().add(tf_keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(876, 98, 134, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("No Klasifikasi");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 177, -1, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText(":");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 177, -1, -1));

        tf_no_klasifikasi.setEditable(false);
        tf_no_klasifikasi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_no_klasifikasi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_no_klasifikasi.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_no_klasifikasi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_no_klasifikasiKeyTyped(evt);
            }
        });
        getContentPane().add(tf_no_klasifikasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(876, 170, 134, 30));

        tf_lokasi_buku.setEditable(false);
        tf_lokasi_buku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_lokasi_buku.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        tf_lokasi_buku.setMargin(new java.awt.Insets(0, 3, 0, 3));
        tf_lokasi_buku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_lokasi_bukuKeyTyped(evt);
            }
        });
        getContentPane().add(tf_lokasi_buku, new org.netbeans.lib.awtextra.AbsoluteConstraints(876, 206, 134, 30));

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText(":");
        getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 212, -1, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Lokasi Buku");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 212, -1, -1));

        tf_tanggal_masuk.setDateFormatString("dd MMMM  yyyy");
        tf_tanggal_masuk.setEnabled(false);
        getContentPane().add(tf_tanggal_masuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 98, 230, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/icon3.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 12, 70, 64));

        keluar.setText("Keluar");
        keluar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        keluar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        keluar.setMargin(new java.awt.Insets(2, 0, 2, 0));
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });
        getContentPane().add(keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(944, 523, 87, 37));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Form Master.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Date tgl_masuk=null;
        try{
            tgl_masuk = new SimpleDateFormat("yyyy-MM-dd").parse(tabel.getValueAt(jTable1.getSelectedRow(), 0).toString());            
        }catch(ParseException ex){
            System.out.println(ex);
        }
        tf_tanggal_masuk.setDate(tgl_masuk);
        tf_no_induk_buku.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        tf_judul_buku.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        tf_pengarang.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        tf_penerbit.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        tf_kategori.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        tf_jumlah_buku.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        tf_tersedia.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        tf_keluar.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
        tf_tahun_terbit.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
        tf_no_klasifikasi.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 10).toString());
        tf_lokasi_buku.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 11).toString());
        
        tambah.setEnabled(false);
        hapus.setEnabled(true);
        ubah.setEnabled(true);
        simpan.setEnabled(false);
        
        temp_nib = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
    }//GEN-LAST:event_jTable1MouseClicked

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        empty_field();
        enable_field();
        fungsi_simpan=true;
        fungsi_ubah=false;
        tambah.setEnabled(false);
        ubah.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(true);
        penomoran_otomatis();
        tf_tanggal_masuk.requestFocus();                
    }//GEN-LAST:event_tambahActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        //Simpan Data
        if(fungsi_simpan==true && fungsi_ubah==false){
            if(tf_no_induk_buku.getText().isEmpty() || tf_judul_buku.getText().isEmpty() || tf_pengarang.getText().isEmpty() 
               || tf_penerbit.getText().isEmpty() || tf_kategori.getSelectedItem().equals("-") 
               || tf_jumlah_buku.getText().isEmpty() || tf_tahun_terbit.getSelectedItem().equals("-")
               || tf_no_klasifikasi.getText().isEmpty() || tf_lokasi_buku.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Lengkapi Data Terlebih Dahulu !");
            }else{
                fungsi_simpan_data();
            }
        }
        //Ubah Data
        else if(fungsi_simpan==false && fungsi_ubah==true){
            if(tf_no_induk_buku.getText().isEmpty() || tf_judul_buku.getText().isEmpty() || tf_pengarang.getText().isEmpty() 
               || tf_penerbit.getText().isEmpty() || tf_kategori.getSelectedItem().equals("-") 
               || tf_jumlah_buku.getText().isEmpty() || tf_tahun_terbit.getSelectedItem().equals("-")
               || tf_no_klasifikasi.getText().isEmpty() || tf_lokasi_buku.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Lengkapi Data Terlebih Dahulu !");
            }else{
                fungsi_ubah_data();
            }
        }
        hitungData();
        pencarian.requestFocus();
    }//GEN-LAST:event_simpanActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        if(tf_no_induk_buku.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu !");
        } else{
            enable_field();
            ubah.setEnabled(false);
            tambah.setEnabled(false);
            hapus.setEnabled(false);
            simpan.setEnabled(true);
            fungsi_simpan=false;
            fungsi_ubah=true;
        }
        tf_tanggal_masuk.requestFocus();
    }//GEN-LAST:event_ubahActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        if(tf_no_induk_buku.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu !");
        }
        else{
            int reply = JOptionPane.showConfirmDialog(this,"Hapus Data Buku ?","Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                try {
                    Connection koneksi = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
                    koneksi.createStatement().executeUpdate("DELETE FROM tbl_3_buku where no_induk_buku='"+tf_no_induk_buku.getText()+"'");
                    JOptionPane.showMessageDialog(this, "Data Dihapus !");
                    tampil();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Data Gagal Dihapus !");
                }
                empty_field();
            }
        }
        batalActionPerformed(evt);
    }//GEN-LAST:event_hapusActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        tampil();
        if(fungsi_simpan==true && fungsi_ubah==false){
            empty_field();
        }else
        if(fungsi_ubah==true && fungsi_simpan==false){

        }else{
            empty_field();
        }
        disable_field();
        tambah.setEnabled(true);
        ubah.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(false);
        fungsi_simpan=false;
        fungsi_ubah=false;
        hitungData();
        pencarian.requestFocus();
    }//GEN-LAST:event_refreshActionPerformed

    private void tf_no_induk_bukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_no_induk_bukuKeyTyped
        FilterHanyaAngka(evt);
        String batas = tf_no_induk_buku.getText();
        if(batas.length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_tf_no_induk_bukuKeyTyped

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        fungsi_pencarian();
        hitungData();
        pencarian.requestFocus();
    }//GEN-LAST:event_cariActionPerformed

    private void pencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pencarianActionPerformed
        fungsi_pencarian();
        hitungData();
    }//GEN-LAST:event_pencarianActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        tampil();
        if(fungsi_simpan==true && fungsi_ubah==false){
            empty_field();
        }else
        if(fungsi_ubah==true && fungsi_simpan==false){

        }else{
            empty_field();
        }
        disable_field();
        tambah.setEnabled(true);
        ubah.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(false);
        fungsi_simpan=false;
        fungsi_ubah=false;
        pencarian.requestFocus();
    }//GEN-LAST:event_batalActionPerformed

    private void tf_judul_bukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_judul_bukuKeyTyped
        String batas = tf_judul_buku.getText();
        if(batas.length()>=250){
            evt.consume();
        }
    }//GEN-LAST:event_tf_judul_bukuKeyTyped

    private void tf_pengarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_pengarangKeyTyped
        String batas = tf_pengarang.getText();
        if(batas.length()>=150){
            evt.consume();
        }
    }//GEN-LAST:event_tf_pengarangKeyTyped

    private void tf_penerbitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_penerbitKeyTyped
        String batas = tf_penerbit.getText();
        if(batas.length()>=150){
            evt.consume();
        }
    }//GEN-LAST:event_tf_penerbitKeyTyped

    private void tf_jumlah_bukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_jumlah_bukuKeyTyped
        FilterHanyaAngka(evt);
    }//GEN-LAST:event_tf_jumlah_bukuKeyTyped

    private void tf_tersediaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_tersediaKeyTyped
        FilterHanyaAngka(evt);
    }//GEN-LAST:event_tf_tersediaKeyTyped

    private void tf_keluarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_keluarKeyTyped
        FilterHanyaAngka(evt);
    }//GEN-LAST:event_tf_keluarKeyTyped

    private void tf_no_klasifikasiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_no_klasifikasiKeyTyped
        String batas = tf_no_klasifikasi.getText();
        if(batas.length()>=30){
            evt.consume();
        }
    }//GEN-LAST:event_tf_no_klasifikasiKeyTyped

    private void tf_lokasi_bukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_lokasi_bukuKeyTyped
        String batas = tf_lokasi_buku.getText();
        if(batas.length()>=20){
            evt.consume();
        }
    }//GEN-LAST:event_tf_lokasi_bukuKeyTyped

    private void tf_kategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_kategoriActionPerformed
        get_id_kategori();
    }//GEN-LAST:event_tf_kategoriActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        this.dispose();
    }//GEN-LAST:event_keluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_4_Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_4_Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_4_Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_4_Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Form_4_Buku dialog = new Form_4_Buku(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batal;
    private javax.swing.JButton cari;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jumlah_data;
    private javax.swing.JButton keluar;
    private javax.swing.JTextField pencarian;
    private javax.swing.JButton refresh;
    private javax.swing.JButton simpan;
    private javax.swing.JButton tambah;
    private javax.swing.JTextArea tf_judul_buku;
    private javax.swing.JTextField tf_jumlah_buku;
    private javax.swing.JComboBox tf_kategori;
    private javax.swing.JTextField tf_keluar;
    private javax.swing.JTextField tf_lokasi_buku;
    private javax.swing.JTextField tf_no_induk_buku;
    private javax.swing.JTextField tf_no_klasifikasi;
    private javax.swing.JTextField tf_penerbit;
    private javax.swing.JTextField tf_pengarang;
    private javax.swing.JComboBox tf_tahun_terbit;
    private com.toedter.calendar.JDateChooser tf_tanggal_masuk;
    private javax.swing.JTextField tf_tersedia;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
    
    private void empty_field() {
        tf_tanggal_masuk.setDate(null);
        tf_no_induk_buku.setText(null);
        tf_judul_buku.setText(null);
        tf_pengarang.setText(null);
        tf_penerbit.setText(null);
        tf_kategori.setSelectedItem("-");
        tf_jumlah_buku.setText("0");
        tf_tersedia.setText("0");
        tf_keluar.setText("0");
        tf_tahun_terbit.setSelectedItem("-");
        tf_no_klasifikasi.setText(null);
        tf_lokasi_buku.setText(null);
        pencarian.setText(null);
    }

    private void enable_field() {
        tf_tanggal_masuk.setEnabled(true);
        tf_no_induk_buku.setEditable(true);
        tf_judul_buku.setEditable(true);
        tf_pengarang.setEditable(true);
        tf_penerbit.setEditable(true);
        tf_kategori.setEnabled(true);
        tf_jumlah_buku.setEditable(true);
        tf_tersedia.setEditable(true);
        tf_keluar.setEditable(true);
        tf_tahun_terbit.setEnabled(true);
        tf_no_klasifikasi.setEditable(true);
        tf_lokasi_buku.setEditable(true);
    }
    
    private void disable_field() {
        tf_tanggal_masuk.setEnabled(false);
        tf_no_induk_buku.setEditable(false);
        tf_judul_buku.setEditable(false);
        tf_pengarang.setEditable(false);
        tf_penerbit.setEditable(false);
        tf_kategori.setEnabled(false);
        tf_jumlah_buku.setEditable(false);
        tf_tersedia.setEditable(false);
        tf_keluar.setEditable(false);
        tf_tahun_terbit.setEnabled(false);
        tf_no_klasifikasi.setEditable(false);
        tf_lokasi_buku.setEditable(false);
    }
    
    private void FilterHanyaHuruf(KeyEvent evt) {
        char c = evt.getKeyChar();
        if (! ((Character.isLetter(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_COMMA) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_PERIOD) )))
        {
            evt.consume();            
        }
    }
    
    private void FilterHanyaAngka(KeyEvent evt) {
        char c = evt.getKeyChar();
        if (! ((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))))
        {
            evt.consume();            
        }
    }

    private void koneksi() {
        try {
            Class.forName("com.mysql.jdbc.Driver") ;
            con = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            stt = (Statement) con.createStatement();
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Koneksi Database Error");
        }
    }
    
    private void tampil_kategori() {
        try {
            com.mysql.jdbc.Connection koneksi = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            ResultSet re=koneksi.createStatement().executeQuery("SELECT * FROM tbl_8_kategori_buku ORDER BY id_kategori ASC");
            while(re.next()){
                tf_kategori.addItem(re.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Terjadi Kesalahan Tampil Kategori !");
        }
    }
    
    private void get_id_kategori() {
        try {
            com.mysql.jdbc.Connection koneksi = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            ResultSet re=koneksi.createStatement().executeQuery("SELECT * FROM tbl_8_kategori_buku WHERE nama_kategori='"+tf_kategori.getSelectedItem()+"'");
            while(re.next()){
                tf_temp_id_kategori = re.getString(1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Terjadi Kesalahan Get Id Supplier !");
        }
    }
    
    private void penomoran_otomatis() {
        int no_induk_buku=0;
        String string_no_induk_buku="";
        try {
            koneksi();
            String sql = "select no_induk_buku from tbl_3_buku order by no_induk_buku desc limit 1";                        
            ResultSet res=stt.executeQuery(sql);
            if (res.next()) {
                string_no_induk_buku = res.getString("no_induk_buku");
            }else{
                string_no_induk_buku = "0";
            }
            no_induk_buku = Integer.parseInt(string_no_induk_buku);
            no_induk_buku++;
            String nilai=String.valueOf(no_induk_buku);
            if(nilai.length()==1){
                tf_no_induk_buku.setText("000"+no_induk_buku);
            }else
            if(nilai.length()==2){
                tf_no_induk_buku.setText("00"+no_induk_buku);
            }else
            if(nilai.length()==3){
                tf_no_induk_buku.setText("0"+no_induk_buku);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Penomoran !");
        }
    }

    private void fungsi_simpan_data() {
        java.text.SimpleDateFormat kal = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String tf_tgl_msk = String.valueOf(kal.format(tf_tanggal_masuk.getDate()));
        try {
            Connection koneksi = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            koneksi.createStatement().executeUpdate("INSERT INTO tbl_3_buku VALUES('"+tf_tgl_msk+"'"
            + ",'"+tf_no_induk_buku.getText()+"','"+tf_judul_buku.getText()+"','"+tf_pengarang.getText()+"','"+tf_penerbit.getText()+"'"
            + ",'"+tf_temp_id_kategori+"','"+tf_jumlah_buku.getText()+"','"+tf_tersedia.getText()+"','"+tf_keluar.getText()+"'"
            + ",'"+tf_tahun_terbit.getSelectedItem()+"','"+tf_no_klasifikasi.getText()+"','"+tf_lokasi_buku.getText()+"'"
            + ")");
            JOptionPane.showMessageDialog(this, "Data Disimpan !");            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Data Gagal Disimpan !");
        }
        tambah.setEnabled(true);
        ubah.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(false);
        fungsi_simpan=false;
        fungsi_ubah=false;
        disable_field();
        tampil();
    }
    
    private void fungsi_ubah_data() {
        java.text.SimpleDateFormat kal = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String tf_tgl_msk = String.valueOf(kal.format(tf_tanggal_masuk.getDate()));
        try {
            Connection koneksi = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            koneksi.createStatement().executeUpdate("UPDATE tbl_3_buku SET "
            + "tanggal_masuk='"+tf_tgl_msk+"'"
            + ",no_induk_buku='"+tf_no_induk_buku.getText()+"',judul='"+tf_judul_buku.getText()+"',pengarang='"+tf_pengarang.getText()+"'"
            + ",penerbit='"+tf_penerbit.getText()+"'"
            + ",id_kategori='"+tf_temp_id_kategori+"',jumlah='"+tf_jumlah_buku.getText()+"',tersedia='"+tf_tersedia.getText()+"',keluar='"+tf_keluar.getText()+"'"
            + ",tahun_terbit='"+tf_tahun_terbit.getSelectedItem()+"',no_klasifikasi='"+tf_no_klasifikasi.getText()+"',lokasi_buku='"+tf_lokasi_buku.getText()+"' "
            + "WHERE no_induk_buku='"+temp_nib+"'");
           JOptionPane.showMessageDialog(this, "Data Diubah !");
        } catch (SQLException ex1) {
           JOptionPane.showMessageDialog(this, "Data Gagal Diubah !");
        }
        tambah.setEnabled(true);
        ubah.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(false);
        fungsi_simpan=false;
        fungsi_ubah=false;
        disable_field();
        tampil();
    }
    
    private void tampil() {
        try {
            int data = jTable1.getRowCount();
            for(int i=0;i<data;i++){
            tabel.removeRow(0);
            }
            com.mysql.jdbc.Connection koneksi = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            ResultSet re=koneksi.createStatement().executeQuery("SELECT * FROM tbl_3_buku ORDER BY no_induk_buku");            
            while(re.next()){                
                ResultSet re1=koneksi.createStatement().executeQuery("SELECT * FROM tbl_8_kategori_buku WHERE id_kategori = '"+re.getString(6)+"'");            
                while(re1.next()){                
                    String[] tabel_master={re.getString(1),re.getString(2),re.getString(3),re.getString(4),re.getString(5),re1.getString(2),re.getString(7)
                                          ,re.getString(8),re.getString(9),re.getString(10),re.getString(11),re.getString(12)};
                    tabel.addRow(tabel_master);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Tampil Tabel");
        }
    }   

    private void aturKolom() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        column = jTable1.getColumnModel().getColumn(0);
        column.setPreferredWidth(110);        
        column = jTable1.getColumnModel().getColumn(1); 
        column.setPreferredWidth(110); 
        column = jTable1.getColumnModel().getColumn(2); 
        column.setPreferredWidth(505);
        column = jTable1.getColumnModel().getColumn(3); 
        column.setPreferredWidth(145);
        column = jTable1.getColumnModel().getColumn(4); 
        column.setPreferredWidth(145);
        column = jTable1.getColumnModel().getColumn(5); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(6); 
        column.setPreferredWidth(110);
        column = jTable1.getColumnModel().getColumn(7); 
        column.setPreferredWidth(110);
        column = jTable1.getColumnModel().getColumn(8); 
        column.setPreferredWidth(110);
        column = jTable1.getColumnModel().getColumn(9); 
        column.setPreferredWidth(110);
        column = jTable1.getColumnModel().getColumn(10); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(11); 
        column.setPreferredWidth(125);
    }        

    private void fungsi_pencarian() {
        try {
            int data = jTable1.getRowCount();
            for(int i=0;i<data;i++){
                tabel.removeRow(0);
            }
            com.mysql.jdbc.Connection koneksi = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/si_perpus","root","");
            ResultSet re=koneksi.createStatement().executeQuery("SELECT * FROM tbl_3_buku where tanggal_masuk LIKE '%"+pencarian.getText()+"%'"
            +"or no_induk_buku like '%"+pencarian.getText()+"%'"+"or judul like '%"+pencarian.getText()+"%'"+"or pengarang like '%" + pencarian.getText()+"%' "
            +"or penerbit like '%"+pencarian.getText()+"%'"+"or id_kategori like '%"+pencarian.getText()+"%'"+"or jumlah like '%" + pencarian.getText()+"%' "
            +"or tersedia like '%"+pencarian.getText()+"%'"+"or keluar like '%"+pencarian.getText()+"%'"+"or tahun_terbit like '%" + pencarian.getText()+"%' "
            +"or no_klasifikasi like '%"+pencarian.getText()+"%'"+"or lokasi_buku like '%"+pencarian.getText()+"%' "
            + "ORDER BY no_induk_buku");
            while(re.next()){                
                ResultSet re1=koneksi.createStatement().executeQuery("SELECT * FROM tbl_3_buku WHERE id_kategori = '"+re.getString(6)+"'");            
                while(re1.next()){                
                    String[] tabel_master={re.getString(1),re.getString(2),re.getString(3),re.getString(4),re.getString(5),re1.getString(2),re.getString(7)
                                          ,re.getString(8),re.getString(9),re.getString(10),re.getString(11),re.getString(12)};
                    tabel.addRow(tabel_master);
                }
            }
            if(jTable1.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Data Tidak Ditemukan !");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Fungsi Pencarian !");
        }
    }

    private void aturFokus() {
        tf_tanggal_masuk.setNextFocusableComponent(tf_no_induk_buku);
        tf_no_induk_buku.setNextFocusableComponent(tf_judul_buku);
        tf_judul_buku.setNextFocusableComponent(tf_pengarang);
        tf_pengarang.setNextFocusableComponent(tf_penerbit);
        tf_penerbit.setNextFocusableComponent(tf_kategori);
        tf_kategori.setNextFocusableComponent(tf_jumlah_buku);
        tf_jumlah_buku.setNextFocusableComponent(tf_tersedia);
        tf_tersedia.setNextFocusableComponent(tf_keluar);
        tf_keluar.setNextFocusableComponent(tf_tahun_terbit);
        tf_tahun_terbit.setNextFocusableComponent(tf_no_klasifikasi);
        tf_no_klasifikasi.setNextFocusableComponent(tf_lokasi_buku);
        tf_lokasi_buku.setNextFocusableComponent(tf_tanggal_masuk);
    }
    
    private void hitungData() {
        int total_baris = jTable1.getRowCount();
        if(String.valueOf(total_baris).length()==1){
            jumlah_data.setText("000"+total_baris);
        }else
        if(String.valueOf(total_baris).length()==2){
            jumlah_data.setText("00"+total_baris);
        }else
        if(String.valueOf(total_baris).length()==3){
            jumlah_data.setText("0"+total_baris);
        }else
        if(String.valueOf(total_baris).length()==4){
            jumlah_data.setText(""+total_baris);
        }
    }
}
